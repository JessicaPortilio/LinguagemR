Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CALL
    CAT
    DEDENT
    FUNCTION
    IDENT
    INF
    LINHA
    MODULO
    NA
    NANA
    NA_CHARACTER_
    NA_COMPLEX
    NA_INTEGER_
    NA_REAL_
    NULL
    PASS
    SEQUENCIAL

Grammar

Rule 0     S' -> program
Rule 1     program -> funcdecl
Rule 2     program -> funcdecl program
Rule 3     funcdecl -> signature body
Rule 4     signature -> ID ID LPAREN sigparams RPAREN
Rule 5     signature -> ID ID LPAREN RPAREN
Rule 6     sigparams -> ID ID
Rule 7     sigparams -> ID ID COMMA sigparams
Rule 8     body -> LCHAV stms RCHAV
Rule 9     body -> LCHAV RCHAV
Rule 10    stms -> stm
Rule 11    stms -> stm stms
Rule 12    bodyORstm -> body
Rule 13    bodyORstm -> stm
Rule 14    stm -> exp PV
Rule 15    stm -> WHILE LPAREN exp RPAREN body
Rule 16    stm -> RETURN exp PV
Rule 17    stm -> FOR LPAREN ID IN exp RPAREN body
Rule 18    stm -> REPEAT body WHILE LPAREN exp RPAREN PV
Rule 19    stm -> BREAK PV
Rule 20    stm -> NEXT PV
Rule 21    stm -> SWITCH LPAREN exp COMMA cases RPAREN
Rule 22    stm -> SWITCH LPAREN exp COMMA casesnum RPAREN
Rule 23    cases -> exp IGUALAT exp
Rule 24    cases -> exp IGUALAT exp COMMA cases
Rule 25    casesnum -> exp
Rule 26    casesnum -> exp COMMA cases
Rule 27    stm -> IF LPAREN exp RPAREN bodyORstm
Rule 28    stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm
Rule 29    exp -> exp IGUAL exp1
Rule 30    exp -> exp1
Rule 31    exp1 -> exp1 SOMA exp2
Rule 32    exp1 -> exp2
Rule 33    exp1 -> exp1 SUBTRAIR exp2
Rule 34    exp2 -> exp2 VEZES exp3
Rule 35    exp2 -> exp3
Rule 36    exp2 -> exp2 DIVIDIR exp3
Rule 37    exp3 -> exp4 POT exp3
Rule 38    exp3 -> exp4
Rule 39    exp4 -> exp4 MAIOR exp5
Rule 40    exp4 -> exp5
Rule 41    exp5 -> exp5 MENOR exp6
Rule 42    exp5 -> exp6
Rule 43    exp6 -> exp6 MAIORIGUAL exp7
Rule 44    exp6 -> exp7
Rule 45    exp7 -> exp7 MENORIGUAL exp8
Rule 46    exp7 -> exp8
Rule 47    exp8 -> exp8 DIFERENTE exp9
Rule 48    exp8 -> exp9
Rule 49    exp9 -> exp9 ANDVETOR exp10
Rule 50    exp9 -> exp10
Rule 51    exp10 -> exp10 AND exp11
Rule 52    exp10 -> exp11
Rule 53    exp11 -> exp11 ORVETOR exp12
Rule 54    exp11 -> exp12
Rule 55    exp12 -> exp12 OR exp13
Rule 56    exp12 -> exp13
Rule 57    exp13 -> exp13 NOTLOGICO exp14
Rule 58    exp13 -> exp14
Rule 59    exp14 -> exp14 XOR exp15
Rule 60    exp14 -> exp15
Rule 61    exp15 -> call
Rule 62    exp15 -> NUMBER_INT
Rule 63    exp15 -> NUMBER_FLOAT
Rule 64    exp15 -> ID
Rule 65    exp15 -> TRUE
Rule 66    exp15 -> FALSE
Rule 67    call -> ID LPAREN params RPAREN
Rule 68    call -> ID LPAREN RPAREN
Rule 69    params -> exp COMMA params
Rule 70    params -> exp

Terminals, with rules where they appear

AND                  : 51
ANDVETOR             : 49
BREAK                : 19
CALL                 : 
CAT                  : 
COMMA                : 7 21 22 24 26 69
DEDENT               : 
DIFERENTE            : 47
DIVIDIR              : 36
ELSE                 : 28
FALSE                : 66
FOR                  : 17
FUNCTION             : 
ID                   : 4 4 5 5 6 6 7 7 17 64 67 68
IDENT                : 
IF                   : 27 28
IGUAL                : 29
IGUALAT              : 23 24
IN                   : 17
INF                  : 
LCHAV                : 8 9
LINHA                : 
LPAREN               : 4 5 15 17 18 21 22 27 28 67 68
MAIOR                : 39
MAIORIGUAL           : 43
MENOR                : 41
MENORIGUAL           : 45
MODULO               : 
NA                   : 
NANA                 : 
NA_CHARACTER_        : 
NA_COMPLEX           : 
NA_INTEGER_          : 
NA_REAL_             : 
NEXT                 : 20
NOTLOGICO            : 57
NULL                 : 
NUMBER_FLOAT         : 63
NUMBER_INT           : 62
OR                   : 55
ORVETOR              : 53
PASS                 : 
POT                  : 37
PV                   : 14 16 18 19 20
RCHAV                : 8 9
REPEAT               : 18
RETURN               : 16
RPAREN               : 4 5 15 17 18 21 22 27 28 67 68
SEQUENCIAL           : 
SOMA                 : 31
SUBTRAIR             : 33
SWITCH               : 21 22
TRUE                 : 65
VEZES                : 34
WHILE                : 15 18
XOR                  : 59
error                : 

Nonterminals, with rules where they appear

body                 : 3 12 15 17 18
bodyORstm            : 27 28 28
call                 : 61
cases                : 21 24 26
casesnum             : 22
exp                  : 14 15 16 17 18 21 22 23 23 24 24 25 26 27 28 29 69 70
exp1                 : 29 30 31 33
exp10                : 49 50 51
exp11                : 51 52 53
exp12                : 53 54 55
exp13                : 55 56 57
exp14                : 57 58 59
exp15                : 59 60
exp2                 : 31 32 33 34 36
exp3                 : 34 35 36 37
exp4                 : 37 38 39
exp5                 : 39 40 41
exp6                 : 41 42 43
exp7                 : 43 44 45
exp8                 : 45 46 47
exp9                 : 47 48 49
funcdecl             : 1 2
params               : 67 69
program              : 2 0
signature            : 3
sigparams            : 4 7
stm                  : 10 11 13
stms                 : 8 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) funcdecl -> . signature body
    (4) signature -> . ID ID LPAREN sigparams RPAREN
    (5) signature -> . ID ID LPAREN RPAREN

    ID              shift and go to state 4

    program                        shift and go to state 1
    funcdecl                       shift and go to state 2
    signature                      shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> funcdecl .
    (2) program -> funcdecl . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) funcdecl -> . signature body
    (4) signature -> . ID ID LPAREN sigparams RPAREN
    (5) signature -> . ID ID LPAREN RPAREN

    $end            reduce using rule 1 (program -> funcdecl .)
    ID              shift and go to state 4

    funcdecl                       shift and go to state 2
    program                        shift and go to state 5
    signature                      shift and go to state 3

state 3

    (3) funcdecl -> signature . body
    (8) body -> . LCHAV stms RCHAV
    (9) body -> . LCHAV RCHAV

    LCHAV           shift and go to state 7

    body                           shift and go to state 6

state 4

    (4) signature -> ID . ID LPAREN sigparams RPAREN
    (5) signature -> ID . ID LPAREN RPAREN

    ID              shift and go to state 8


state 5

    (2) program -> funcdecl program .

    $end            reduce using rule 2 (program -> funcdecl program .)


state 6

    (3) funcdecl -> signature body .

    ID              reduce using rule 3 (funcdecl -> signature body .)
    $end            reduce using rule 3 (funcdecl -> signature body .)


state 7

    (8) body -> LCHAV . stms RCHAV
    (9) body -> LCHAV . RCHAV
    (10) stms -> . stm
    (11) stms -> . stm stms
    (14) stm -> . exp PV
    (15) stm -> . WHILE LPAREN exp RPAREN body
    (16) stm -> . RETURN exp PV
    (17) stm -> . FOR LPAREN ID IN exp RPAREN body
    (18) stm -> . REPEAT body WHILE LPAREN exp RPAREN PV
    (19) stm -> . BREAK PV
    (20) stm -> . NEXT PV
    (21) stm -> . SWITCH LPAREN exp COMMA cases RPAREN
    (22) stm -> . SWITCH LPAREN exp COMMA casesnum RPAREN
    (27) stm -> . IF LPAREN exp RPAREN bodyORstm
    (28) stm -> . IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    RCHAV           shift and go to state 10
    WHILE           shift and go to state 13
    RETURN          shift and go to state 14
    FOR             shift and go to state 15
    REPEAT          shift and go to state 17
    BREAK           shift and go to state 18
    NEXT            shift and go to state 19
    SWITCH          shift and go to state 20
    IF              shift and go to state 21
    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    stms                           shift and go to state 9
    stm                            shift and go to state 11
    exp                            shift and go to state 12
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 8

    (4) signature -> ID ID . LPAREN sigparams RPAREN
    (5) signature -> ID ID . LPAREN RPAREN

    LPAREN          shift and go to state 42


state 9

    (8) body -> LCHAV stms . RCHAV

    RCHAV           shift and go to state 43


state 10

    (9) body -> LCHAV RCHAV .

    ID              reduce using rule 9 (body -> LCHAV RCHAV .)
    $end            reduce using rule 9 (body -> LCHAV RCHAV .)
    WHILE           reduce using rule 9 (body -> LCHAV RCHAV .)
    RETURN          reduce using rule 9 (body -> LCHAV RCHAV .)
    FOR             reduce using rule 9 (body -> LCHAV RCHAV .)
    REPEAT          reduce using rule 9 (body -> LCHAV RCHAV .)
    BREAK           reduce using rule 9 (body -> LCHAV RCHAV .)
    NEXT            reduce using rule 9 (body -> LCHAV RCHAV .)
    SWITCH          reduce using rule 9 (body -> LCHAV RCHAV .)
    IF              reduce using rule 9 (body -> LCHAV RCHAV .)
    NUMBER_INT      reduce using rule 9 (body -> LCHAV RCHAV .)
    NUMBER_FLOAT    reduce using rule 9 (body -> LCHAV RCHAV .)
    TRUE            reduce using rule 9 (body -> LCHAV RCHAV .)
    FALSE           reduce using rule 9 (body -> LCHAV RCHAV .)
    RCHAV           reduce using rule 9 (body -> LCHAV RCHAV .)
    ELSE            reduce using rule 9 (body -> LCHAV RCHAV .)


state 11

    (10) stms -> stm .
    (11) stms -> stm . stms
    (10) stms -> . stm
    (11) stms -> . stm stms
    (14) stm -> . exp PV
    (15) stm -> . WHILE LPAREN exp RPAREN body
    (16) stm -> . RETURN exp PV
    (17) stm -> . FOR LPAREN ID IN exp RPAREN body
    (18) stm -> . REPEAT body WHILE LPAREN exp RPAREN PV
    (19) stm -> . BREAK PV
    (20) stm -> . NEXT PV
    (21) stm -> . SWITCH LPAREN exp COMMA cases RPAREN
    (22) stm -> . SWITCH LPAREN exp COMMA casesnum RPAREN
    (27) stm -> . IF LPAREN exp RPAREN bodyORstm
    (28) stm -> . IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    RCHAV           reduce using rule 10 (stms -> stm .)
    WHILE           shift and go to state 13
    RETURN          shift and go to state 14
    FOR             shift and go to state 15
    REPEAT          shift and go to state 17
    BREAK           shift and go to state 18
    NEXT            shift and go to state 19
    SWITCH          shift and go to state 20
    IF              shift and go to state 21
    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    stm                            shift and go to state 11
    stms                           shift and go to state 44
    exp                            shift and go to state 12
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 12

    (14) stm -> exp . PV
    (29) exp -> exp . IGUAL exp1

    PV              shift and go to state 45
    IGUAL           shift and go to state 46


state 13

    (15) stm -> WHILE . LPAREN exp RPAREN body

    LPAREN          shift and go to state 47


state 14

    (16) stm -> RETURN . exp PV
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 48
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 15

    (17) stm -> FOR . LPAREN ID IN exp RPAREN body

    LPAREN          shift and go to state 49


state 16

    (64) exp15 -> ID .
    (67) call -> ID . LPAREN params RPAREN
    (68) call -> ID . LPAREN RPAREN

    XOR             reduce using rule 64 (exp15 -> ID .)
    NOTLOGICO       reduce using rule 64 (exp15 -> ID .)
    OR              reduce using rule 64 (exp15 -> ID .)
    ORVETOR         reduce using rule 64 (exp15 -> ID .)
    AND             reduce using rule 64 (exp15 -> ID .)
    ANDVETOR        reduce using rule 64 (exp15 -> ID .)
    DIFERENTE       reduce using rule 64 (exp15 -> ID .)
    MENORIGUAL      reduce using rule 64 (exp15 -> ID .)
    MAIORIGUAL      reduce using rule 64 (exp15 -> ID .)
    MENOR           reduce using rule 64 (exp15 -> ID .)
    POT             reduce using rule 64 (exp15 -> ID .)
    MAIOR           reduce using rule 64 (exp15 -> ID .)
    VEZES           reduce using rule 64 (exp15 -> ID .)
    DIVIDIR         reduce using rule 64 (exp15 -> ID .)
    SOMA            reduce using rule 64 (exp15 -> ID .)
    SUBTRAIR        reduce using rule 64 (exp15 -> ID .)
    PV              reduce using rule 64 (exp15 -> ID .)
    IGUAL           reduce using rule 64 (exp15 -> ID .)
    RPAREN          reduce using rule 64 (exp15 -> ID .)
    COMMA           reduce using rule 64 (exp15 -> ID .)
    IGUALAT         reduce using rule 64 (exp15 -> ID .)
    LPAREN          shift and go to state 50


state 17

    (18) stm -> REPEAT . body WHILE LPAREN exp RPAREN PV
    (8) body -> . LCHAV stms RCHAV
    (9) body -> . LCHAV RCHAV

    LCHAV           shift and go to state 7

    body                           shift and go to state 51

state 18

    (19) stm -> BREAK . PV

    PV              shift and go to state 52


state 19

    (20) stm -> NEXT . PV

    PV              shift and go to state 53


state 20

    (21) stm -> SWITCH . LPAREN exp COMMA cases RPAREN
    (22) stm -> SWITCH . LPAREN exp COMMA casesnum RPAREN

    LPAREN          shift and go to state 54


state 21

    (27) stm -> IF . LPAREN exp RPAREN bodyORstm
    (28) stm -> IF . LPAREN exp RPAREN bodyORstm ELSE bodyORstm

    LPAREN          shift and go to state 55


state 22

    (30) exp -> exp1 .
    (31) exp1 -> exp1 . SOMA exp2
    (33) exp1 -> exp1 . SUBTRAIR exp2

    PV              reduce using rule 30 (exp -> exp1 .)
    IGUAL           reduce using rule 30 (exp -> exp1 .)
    RPAREN          reduce using rule 30 (exp -> exp1 .)
    COMMA           reduce using rule 30 (exp -> exp1 .)
    IGUALAT         reduce using rule 30 (exp -> exp1 .)
    SOMA            shift and go to state 56
    SUBTRAIR        shift and go to state 57


state 23

    (32) exp1 -> exp2 .
    (34) exp2 -> exp2 . VEZES exp3
    (36) exp2 -> exp2 . DIVIDIR exp3

    SOMA            reduce using rule 32 (exp1 -> exp2 .)
    SUBTRAIR        reduce using rule 32 (exp1 -> exp2 .)
    PV              reduce using rule 32 (exp1 -> exp2 .)
    IGUAL           reduce using rule 32 (exp1 -> exp2 .)
    RPAREN          reduce using rule 32 (exp1 -> exp2 .)
    COMMA           reduce using rule 32 (exp1 -> exp2 .)
    IGUALAT         reduce using rule 32 (exp1 -> exp2 .)
    VEZES           shift and go to state 58
    DIVIDIR         shift and go to state 59


state 24

    (35) exp2 -> exp3 .

    VEZES           reduce using rule 35 (exp2 -> exp3 .)
    DIVIDIR         reduce using rule 35 (exp2 -> exp3 .)
    SOMA            reduce using rule 35 (exp2 -> exp3 .)
    SUBTRAIR        reduce using rule 35 (exp2 -> exp3 .)
    PV              reduce using rule 35 (exp2 -> exp3 .)
    IGUAL           reduce using rule 35 (exp2 -> exp3 .)
    RPAREN          reduce using rule 35 (exp2 -> exp3 .)
    COMMA           reduce using rule 35 (exp2 -> exp3 .)
    IGUALAT         reduce using rule 35 (exp2 -> exp3 .)


state 25

    (37) exp3 -> exp4 . POT exp3
    (38) exp3 -> exp4 .
    (39) exp4 -> exp4 . MAIOR exp5

    POT             shift and go to state 60
    VEZES           reduce using rule 38 (exp3 -> exp4 .)
    DIVIDIR         reduce using rule 38 (exp3 -> exp4 .)
    SOMA            reduce using rule 38 (exp3 -> exp4 .)
    SUBTRAIR        reduce using rule 38 (exp3 -> exp4 .)
    PV              reduce using rule 38 (exp3 -> exp4 .)
    IGUAL           reduce using rule 38 (exp3 -> exp4 .)
    RPAREN          reduce using rule 38 (exp3 -> exp4 .)
    COMMA           reduce using rule 38 (exp3 -> exp4 .)
    IGUALAT         reduce using rule 38 (exp3 -> exp4 .)
    MAIOR           shift and go to state 61


state 26

    (40) exp4 -> exp5 .
    (41) exp5 -> exp5 . MENOR exp6

    POT             reduce using rule 40 (exp4 -> exp5 .)
    MAIOR           reduce using rule 40 (exp4 -> exp5 .)
    VEZES           reduce using rule 40 (exp4 -> exp5 .)
    DIVIDIR         reduce using rule 40 (exp4 -> exp5 .)
    SOMA            reduce using rule 40 (exp4 -> exp5 .)
    SUBTRAIR        reduce using rule 40 (exp4 -> exp5 .)
    PV              reduce using rule 40 (exp4 -> exp5 .)
    IGUAL           reduce using rule 40 (exp4 -> exp5 .)
    RPAREN          reduce using rule 40 (exp4 -> exp5 .)
    COMMA           reduce using rule 40 (exp4 -> exp5 .)
    IGUALAT         reduce using rule 40 (exp4 -> exp5 .)
    MENOR           shift and go to state 62


state 27

    (42) exp5 -> exp6 .
    (43) exp6 -> exp6 . MAIORIGUAL exp7

    MENOR           reduce using rule 42 (exp5 -> exp6 .)
    POT             reduce using rule 42 (exp5 -> exp6 .)
    MAIOR           reduce using rule 42 (exp5 -> exp6 .)
    VEZES           reduce using rule 42 (exp5 -> exp6 .)
    DIVIDIR         reduce using rule 42 (exp5 -> exp6 .)
    SOMA            reduce using rule 42 (exp5 -> exp6 .)
    SUBTRAIR        reduce using rule 42 (exp5 -> exp6 .)
    PV              reduce using rule 42 (exp5 -> exp6 .)
    IGUAL           reduce using rule 42 (exp5 -> exp6 .)
    RPAREN          reduce using rule 42 (exp5 -> exp6 .)
    COMMA           reduce using rule 42 (exp5 -> exp6 .)
    IGUALAT         reduce using rule 42 (exp5 -> exp6 .)
    MAIORIGUAL      shift and go to state 63


state 28

    (44) exp6 -> exp7 .
    (45) exp7 -> exp7 . MENORIGUAL exp8

    MAIORIGUAL      reduce using rule 44 (exp6 -> exp7 .)
    MENOR           reduce using rule 44 (exp6 -> exp7 .)
    POT             reduce using rule 44 (exp6 -> exp7 .)
    MAIOR           reduce using rule 44 (exp6 -> exp7 .)
    VEZES           reduce using rule 44 (exp6 -> exp7 .)
    DIVIDIR         reduce using rule 44 (exp6 -> exp7 .)
    SOMA            reduce using rule 44 (exp6 -> exp7 .)
    SUBTRAIR        reduce using rule 44 (exp6 -> exp7 .)
    PV              reduce using rule 44 (exp6 -> exp7 .)
    IGUAL           reduce using rule 44 (exp6 -> exp7 .)
    RPAREN          reduce using rule 44 (exp6 -> exp7 .)
    COMMA           reduce using rule 44 (exp6 -> exp7 .)
    IGUALAT         reduce using rule 44 (exp6 -> exp7 .)
    MENORIGUAL      shift and go to state 64


state 29

    (46) exp7 -> exp8 .
    (47) exp8 -> exp8 . DIFERENTE exp9

    MENORIGUAL      reduce using rule 46 (exp7 -> exp8 .)
    MAIORIGUAL      reduce using rule 46 (exp7 -> exp8 .)
    MENOR           reduce using rule 46 (exp7 -> exp8 .)
    POT             reduce using rule 46 (exp7 -> exp8 .)
    MAIOR           reduce using rule 46 (exp7 -> exp8 .)
    VEZES           reduce using rule 46 (exp7 -> exp8 .)
    DIVIDIR         reduce using rule 46 (exp7 -> exp8 .)
    SOMA            reduce using rule 46 (exp7 -> exp8 .)
    SUBTRAIR        reduce using rule 46 (exp7 -> exp8 .)
    PV              reduce using rule 46 (exp7 -> exp8 .)
    IGUAL           reduce using rule 46 (exp7 -> exp8 .)
    RPAREN          reduce using rule 46 (exp7 -> exp8 .)
    COMMA           reduce using rule 46 (exp7 -> exp8 .)
    IGUALAT         reduce using rule 46 (exp7 -> exp8 .)
    DIFERENTE       shift and go to state 65


state 30

    (48) exp8 -> exp9 .
    (49) exp9 -> exp9 . ANDVETOR exp10

    DIFERENTE       reduce using rule 48 (exp8 -> exp9 .)
    MENORIGUAL      reduce using rule 48 (exp8 -> exp9 .)
    MAIORIGUAL      reduce using rule 48 (exp8 -> exp9 .)
    MENOR           reduce using rule 48 (exp8 -> exp9 .)
    POT             reduce using rule 48 (exp8 -> exp9 .)
    MAIOR           reduce using rule 48 (exp8 -> exp9 .)
    VEZES           reduce using rule 48 (exp8 -> exp9 .)
    DIVIDIR         reduce using rule 48 (exp8 -> exp9 .)
    SOMA            reduce using rule 48 (exp8 -> exp9 .)
    SUBTRAIR        reduce using rule 48 (exp8 -> exp9 .)
    PV              reduce using rule 48 (exp8 -> exp9 .)
    IGUAL           reduce using rule 48 (exp8 -> exp9 .)
    RPAREN          reduce using rule 48 (exp8 -> exp9 .)
    COMMA           reduce using rule 48 (exp8 -> exp9 .)
    IGUALAT         reduce using rule 48 (exp8 -> exp9 .)
    ANDVETOR        shift and go to state 66


state 31

    (50) exp9 -> exp10 .
    (51) exp10 -> exp10 . AND exp11

    ANDVETOR        reduce using rule 50 (exp9 -> exp10 .)
    DIFERENTE       reduce using rule 50 (exp9 -> exp10 .)
    MENORIGUAL      reduce using rule 50 (exp9 -> exp10 .)
    MAIORIGUAL      reduce using rule 50 (exp9 -> exp10 .)
    MENOR           reduce using rule 50 (exp9 -> exp10 .)
    POT             reduce using rule 50 (exp9 -> exp10 .)
    MAIOR           reduce using rule 50 (exp9 -> exp10 .)
    VEZES           reduce using rule 50 (exp9 -> exp10 .)
    DIVIDIR         reduce using rule 50 (exp9 -> exp10 .)
    SOMA            reduce using rule 50 (exp9 -> exp10 .)
    SUBTRAIR        reduce using rule 50 (exp9 -> exp10 .)
    PV              reduce using rule 50 (exp9 -> exp10 .)
    IGUAL           reduce using rule 50 (exp9 -> exp10 .)
    RPAREN          reduce using rule 50 (exp9 -> exp10 .)
    COMMA           reduce using rule 50 (exp9 -> exp10 .)
    IGUALAT         reduce using rule 50 (exp9 -> exp10 .)
    AND             shift and go to state 67


state 32

    (52) exp10 -> exp11 .
    (53) exp11 -> exp11 . ORVETOR exp12

    AND             reduce using rule 52 (exp10 -> exp11 .)
    ANDVETOR        reduce using rule 52 (exp10 -> exp11 .)
    DIFERENTE       reduce using rule 52 (exp10 -> exp11 .)
    MENORIGUAL      reduce using rule 52 (exp10 -> exp11 .)
    MAIORIGUAL      reduce using rule 52 (exp10 -> exp11 .)
    MENOR           reduce using rule 52 (exp10 -> exp11 .)
    POT             reduce using rule 52 (exp10 -> exp11 .)
    MAIOR           reduce using rule 52 (exp10 -> exp11 .)
    VEZES           reduce using rule 52 (exp10 -> exp11 .)
    DIVIDIR         reduce using rule 52 (exp10 -> exp11 .)
    SOMA            reduce using rule 52 (exp10 -> exp11 .)
    SUBTRAIR        reduce using rule 52 (exp10 -> exp11 .)
    PV              reduce using rule 52 (exp10 -> exp11 .)
    IGUAL           reduce using rule 52 (exp10 -> exp11 .)
    RPAREN          reduce using rule 52 (exp10 -> exp11 .)
    COMMA           reduce using rule 52 (exp10 -> exp11 .)
    IGUALAT         reduce using rule 52 (exp10 -> exp11 .)
    ORVETOR         shift and go to state 68


state 33

    (54) exp11 -> exp12 .
    (55) exp12 -> exp12 . OR exp13

    ORVETOR         reduce using rule 54 (exp11 -> exp12 .)
    AND             reduce using rule 54 (exp11 -> exp12 .)
    ANDVETOR        reduce using rule 54 (exp11 -> exp12 .)
    DIFERENTE       reduce using rule 54 (exp11 -> exp12 .)
    MENORIGUAL      reduce using rule 54 (exp11 -> exp12 .)
    MAIORIGUAL      reduce using rule 54 (exp11 -> exp12 .)
    MENOR           reduce using rule 54 (exp11 -> exp12 .)
    POT             reduce using rule 54 (exp11 -> exp12 .)
    MAIOR           reduce using rule 54 (exp11 -> exp12 .)
    VEZES           reduce using rule 54 (exp11 -> exp12 .)
    DIVIDIR         reduce using rule 54 (exp11 -> exp12 .)
    SOMA            reduce using rule 54 (exp11 -> exp12 .)
    SUBTRAIR        reduce using rule 54 (exp11 -> exp12 .)
    PV              reduce using rule 54 (exp11 -> exp12 .)
    IGUAL           reduce using rule 54 (exp11 -> exp12 .)
    RPAREN          reduce using rule 54 (exp11 -> exp12 .)
    COMMA           reduce using rule 54 (exp11 -> exp12 .)
    IGUALAT         reduce using rule 54 (exp11 -> exp12 .)
    OR              shift and go to state 69


state 34

    (56) exp12 -> exp13 .
    (57) exp13 -> exp13 . NOTLOGICO exp14

    OR              reduce using rule 56 (exp12 -> exp13 .)
    ORVETOR         reduce using rule 56 (exp12 -> exp13 .)
    AND             reduce using rule 56 (exp12 -> exp13 .)
    ANDVETOR        reduce using rule 56 (exp12 -> exp13 .)
    DIFERENTE       reduce using rule 56 (exp12 -> exp13 .)
    MENORIGUAL      reduce using rule 56 (exp12 -> exp13 .)
    MAIORIGUAL      reduce using rule 56 (exp12 -> exp13 .)
    MENOR           reduce using rule 56 (exp12 -> exp13 .)
    POT             reduce using rule 56 (exp12 -> exp13 .)
    MAIOR           reduce using rule 56 (exp12 -> exp13 .)
    VEZES           reduce using rule 56 (exp12 -> exp13 .)
    DIVIDIR         reduce using rule 56 (exp12 -> exp13 .)
    SOMA            reduce using rule 56 (exp12 -> exp13 .)
    SUBTRAIR        reduce using rule 56 (exp12 -> exp13 .)
    PV              reduce using rule 56 (exp12 -> exp13 .)
    IGUAL           reduce using rule 56 (exp12 -> exp13 .)
    RPAREN          reduce using rule 56 (exp12 -> exp13 .)
    COMMA           reduce using rule 56 (exp12 -> exp13 .)
    IGUALAT         reduce using rule 56 (exp12 -> exp13 .)
    NOTLOGICO       shift and go to state 70


state 35

    (58) exp13 -> exp14 .
    (59) exp14 -> exp14 . XOR exp15

    NOTLOGICO       reduce using rule 58 (exp13 -> exp14 .)
    OR              reduce using rule 58 (exp13 -> exp14 .)
    ORVETOR         reduce using rule 58 (exp13 -> exp14 .)
    AND             reduce using rule 58 (exp13 -> exp14 .)
    ANDVETOR        reduce using rule 58 (exp13 -> exp14 .)
    DIFERENTE       reduce using rule 58 (exp13 -> exp14 .)
    MENORIGUAL      reduce using rule 58 (exp13 -> exp14 .)
    MAIORIGUAL      reduce using rule 58 (exp13 -> exp14 .)
    MENOR           reduce using rule 58 (exp13 -> exp14 .)
    POT             reduce using rule 58 (exp13 -> exp14 .)
    MAIOR           reduce using rule 58 (exp13 -> exp14 .)
    VEZES           reduce using rule 58 (exp13 -> exp14 .)
    DIVIDIR         reduce using rule 58 (exp13 -> exp14 .)
    SOMA            reduce using rule 58 (exp13 -> exp14 .)
    SUBTRAIR        reduce using rule 58 (exp13 -> exp14 .)
    PV              reduce using rule 58 (exp13 -> exp14 .)
    IGUAL           reduce using rule 58 (exp13 -> exp14 .)
    RPAREN          reduce using rule 58 (exp13 -> exp14 .)
    COMMA           reduce using rule 58 (exp13 -> exp14 .)
    IGUALAT         reduce using rule 58 (exp13 -> exp14 .)
    XOR             shift and go to state 71


state 36

    (60) exp14 -> exp15 .

    XOR             reduce using rule 60 (exp14 -> exp15 .)
    NOTLOGICO       reduce using rule 60 (exp14 -> exp15 .)
    OR              reduce using rule 60 (exp14 -> exp15 .)
    ORVETOR         reduce using rule 60 (exp14 -> exp15 .)
    AND             reduce using rule 60 (exp14 -> exp15 .)
    ANDVETOR        reduce using rule 60 (exp14 -> exp15 .)
    DIFERENTE       reduce using rule 60 (exp14 -> exp15 .)
    MENORIGUAL      reduce using rule 60 (exp14 -> exp15 .)
    MAIORIGUAL      reduce using rule 60 (exp14 -> exp15 .)
    MENOR           reduce using rule 60 (exp14 -> exp15 .)
    POT             reduce using rule 60 (exp14 -> exp15 .)
    MAIOR           reduce using rule 60 (exp14 -> exp15 .)
    VEZES           reduce using rule 60 (exp14 -> exp15 .)
    DIVIDIR         reduce using rule 60 (exp14 -> exp15 .)
    SOMA            reduce using rule 60 (exp14 -> exp15 .)
    SUBTRAIR        reduce using rule 60 (exp14 -> exp15 .)
    PV              reduce using rule 60 (exp14 -> exp15 .)
    IGUAL           reduce using rule 60 (exp14 -> exp15 .)
    RPAREN          reduce using rule 60 (exp14 -> exp15 .)
    COMMA           reduce using rule 60 (exp14 -> exp15 .)
    IGUALAT         reduce using rule 60 (exp14 -> exp15 .)


state 37

    (61) exp15 -> call .

    XOR             reduce using rule 61 (exp15 -> call .)
    NOTLOGICO       reduce using rule 61 (exp15 -> call .)
    OR              reduce using rule 61 (exp15 -> call .)
    ORVETOR         reduce using rule 61 (exp15 -> call .)
    AND             reduce using rule 61 (exp15 -> call .)
    ANDVETOR        reduce using rule 61 (exp15 -> call .)
    DIFERENTE       reduce using rule 61 (exp15 -> call .)
    MENORIGUAL      reduce using rule 61 (exp15 -> call .)
    MAIORIGUAL      reduce using rule 61 (exp15 -> call .)
    MENOR           reduce using rule 61 (exp15 -> call .)
    POT             reduce using rule 61 (exp15 -> call .)
    MAIOR           reduce using rule 61 (exp15 -> call .)
    VEZES           reduce using rule 61 (exp15 -> call .)
    DIVIDIR         reduce using rule 61 (exp15 -> call .)
    SOMA            reduce using rule 61 (exp15 -> call .)
    SUBTRAIR        reduce using rule 61 (exp15 -> call .)
    PV              reduce using rule 61 (exp15 -> call .)
    IGUAL           reduce using rule 61 (exp15 -> call .)
    RPAREN          reduce using rule 61 (exp15 -> call .)
    COMMA           reduce using rule 61 (exp15 -> call .)
    IGUALAT         reduce using rule 61 (exp15 -> call .)


state 38

    (62) exp15 -> NUMBER_INT .

    XOR             reduce using rule 62 (exp15 -> NUMBER_INT .)
    NOTLOGICO       reduce using rule 62 (exp15 -> NUMBER_INT .)
    OR              reduce using rule 62 (exp15 -> NUMBER_INT .)
    ORVETOR         reduce using rule 62 (exp15 -> NUMBER_INT .)
    AND             reduce using rule 62 (exp15 -> NUMBER_INT .)
    ANDVETOR        reduce using rule 62 (exp15 -> NUMBER_INT .)
    DIFERENTE       reduce using rule 62 (exp15 -> NUMBER_INT .)
    MENORIGUAL      reduce using rule 62 (exp15 -> NUMBER_INT .)
    MAIORIGUAL      reduce using rule 62 (exp15 -> NUMBER_INT .)
    MENOR           reduce using rule 62 (exp15 -> NUMBER_INT .)
    POT             reduce using rule 62 (exp15 -> NUMBER_INT .)
    MAIOR           reduce using rule 62 (exp15 -> NUMBER_INT .)
    VEZES           reduce using rule 62 (exp15 -> NUMBER_INT .)
    DIVIDIR         reduce using rule 62 (exp15 -> NUMBER_INT .)
    SOMA            reduce using rule 62 (exp15 -> NUMBER_INT .)
    SUBTRAIR        reduce using rule 62 (exp15 -> NUMBER_INT .)
    PV              reduce using rule 62 (exp15 -> NUMBER_INT .)
    IGUAL           reduce using rule 62 (exp15 -> NUMBER_INT .)
    RPAREN          reduce using rule 62 (exp15 -> NUMBER_INT .)
    COMMA           reduce using rule 62 (exp15 -> NUMBER_INT .)
    IGUALAT         reduce using rule 62 (exp15 -> NUMBER_INT .)


state 39

    (63) exp15 -> NUMBER_FLOAT .

    XOR             reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    NOTLOGICO       reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    OR              reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    ORVETOR         reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    AND             reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    ANDVETOR        reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    DIFERENTE       reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    MENORIGUAL      reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    MAIORIGUAL      reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    MENOR           reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    POT             reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    MAIOR           reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    VEZES           reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    DIVIDIR         reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    SOMA            reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    SUBTRAIR        reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    PV              reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    IGUAL           reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    RPAREN          reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    COMMA           reduce using rule 63 (exp15 -> NUMBER_FLOAT .)
    IGUALAT         reduce using rule 63 (exp15 -> NUMBER_FLOAT .)


state 40

    (65) exp15 -> TRUE .

    XOR             reduce using rule 65 (exp15 -> TRUE .)
    NOTLOGICO       reduce using rule 65 (exp15 -> TRUE .)
    OR              reduce using rule 65 (exp15 -> TRUE .)
    ORVETOR         reduce using rule 65 (exp15 -> TRUE .)
    AND             reduce using rule 65 (exp15 -> TRUE .)
    ANDVETOR        reduce using rule 65 (exp15 -> TRUE .)
    DIFERENTE       reduce using rule 65 (exp15 -> TRUE .)
    MENORIGUAL      reduce using rule 65 (exp15 -> TRUE .)
    MAIORIGUAL      reduce using rule 65 (exp15 -> TRUE .)
    MENOR           reduce using rule 65 (exp15 -> TRUE .)
    POT             reduce using rule 65 (exp15 -> TRUE .)
    MAIOR           reduce using rule 65 (exp15 -> TRUE .)
    VEZES           reduce using rule 65 (exp15 -> TRUE .)
    DIVIDIR         reduce using rule 65 (exp15 -> TRUE .)
    SOMA            reduce using rule 65 (exp15 -> TRUE .)
    SUBTRAIR        reduce using rule 65 (exp15 -> TRUE .)
    PV              reduce using rule 65 (exp15 -> TRUE .)
    IGUAL           reduce using rule 65 (exp15 -> TRUE .)
    RPAREN          reduce using rule 65 (exp15 -> TRUE .)
    COMMA           reduce using rule 65 (exp15 -> TRUE .)
    IGUALAT         reduce using rule 65 (exp15 -> TRUE .)


state 41

    (66) exp15 -> FALSE .

    XOR             reduce using rule 66 (exp15 -> FALSE .)
    NOTLOGICO       reduce using rule 66 (exp15 -> FALSE .)
    OR              reduce using rule 66 (exp15 -> FALSE .)
    ORVETOR         reduce using rule 66 (exp15 -> FALSE .)
    AND             reduce using rule 66 (exp15 -> FALSE .)
    ANDVETOR        reduce using rule 66 (exp15 -> FALSE .)
    DIFERENTE       reduce using rule 66 (exp15 -> FALSE .)
    MENORIGUAL      reduce using rule 66 (exp15 -> FALSE .)
    MAIORIGUAL      reduce using rule 66 (exp15 -> FALSE .)
    MENOR           reduce using rule 66 (exp15 -> FALSE .)
    POT             reduce using rule 66 (exp15 -> FALSE .)
    MAIOR           reduce using rule 66 (exp15 -> FALSE .)
    VEZES           reduce using rule 66 (exp15 -> FALSE .)
    DIVIDIR         reduce using rule 66 (exp15 -> FALSE .)
    SOMA            reduce using rule 66 (exp15 -> FALSE .)
    SUBTRAIR        reduce using rule 66 (exp15 -> FALSE .)
    PV              reduce using rule 66 (exp15 -> FALSE .)
    IGUAL           reduce using rule 66 (exp15 -> FALSE .)
    RPAREN          reduce using rule 66 (exp15 -> FALSE .)
    COMMA           reduce using rule 66 (exp15 -> FALSE .)
    IGUALAT         reduce using rule 66 (exp15 -> FALSE .)


state 42

    (4) signature -> ID ID LPAREN . sigparams RPAREN
    (5) signature -> ID ID LPAREN . RPAREN
    (6) sigparams -> . ID ID
    (7) sigparams -> . ID ID COMMA sigparams

    RPAREN          shift and go to state 74
    ID              shift and go to state 72

    sigparams                      shift and go to state 73

state 43

    (8) body -> LCHAV stms RCHAV .

    ID              reduce using rule 8 (body -> LCHAV stms RCHAV .)
    $end            reduce using rule 8 (body -> LCHAV stms RCHAV .)
    WHILE           reduce using rule 8 (body -> LCHAV stms RCHAV .)
    RETURN          reduce using rule 8 (body -> LCHAV stms RCHAV .)
    FOR             reduce using rule 8 (body -> LCHAV stms RCHAV .)
    REPEAT          reduce using rule 8 (body -> LCHAV stms RCHAV .)
    BREAK           reduce using rule 8 (body -> LCHAV stms RCHAV .)
    NEXT            reduce using rule 8 (body -> LCHAV stms RCHAV .)
    SWITCH          reduce using rule 8 (body -> LCHAV stms RCHAV .)
    IF              reduce using rule 8 (body -> LCHAV stms RCHAV .)
    NUMBER_INT      reduce using rule 8 (body -> LCHAV stms RCHAV .)
    NUMBER_FLOAT    reduce using rule 8 (body -> LCHAV stms RCHAV .)
    TRUE            reduce using rule 8 (body -> LCHAV stms RCHAV .)
    FALSE           reduce using rule 8 (body -> LCHAV stms RCHAV .)
    RCHAV           reduce using rule 8 (body -> LCHAV stms RCHAV .)
    ELSE            reduce using rule 8 (body -> LCHAV stms RCHAV .)


state 44

    (11) stms -> stm stms .

    RCHAV           reduce using rule 11 (stms -> stm stms .)


state 45

    (14) stm -> exp PV .

    WHILE           reduce using rule 14 (stm -> exp PV .)
    RETURN          reduce using rule 14 (stm -> exp PV .)
    FOR             reduce using rule 14 (stm -> exp PV .)
    REPEAT          reduce using rule 14 (stm -> exp PV .)
    BREAK           reduce using rule 14 (stm -> exp PV .)
    NEXT            reduce using rule 14 (stm -> exp PV .)
    SWITCH          reduce using rule 14 (stm -> exp PV .)
    IF              reduce using rule 14 (stm -> exp PV .)
    NUMBER_INT      reduce using rule 14 (stm -> exp PV .)
    NUMBER_FLOAT    reduce using rule 14 (stm -> exp PV .)
    ID              reduce using rule 14 (stm -> exp PV .)
    TRUE            reduce using rule 14 (stm -> exp PV .)
    FALSE           reduce using rule 14 (stm -> exp PV .)
    RCHAV           reduce using rule 14 (stm -> exp PV .)
    ELSE            reduce using rule 14 (stm -> exp PV .)


state 46

    (29) exp -> exp IGUAL . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp1                           shift and go to state 75
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 47

    (15) stm -> WHILE LPAREN . exp RPAREN body
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 76
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 48

    (16) stm -> RETURN exp . PV
    (29) exp -> exp . IGUAL exp1

    PV              shift and go to state 77
    IGUAL           shift and go to state 46


state 49

    (17) stm -> FOR LPAREN . ID IN exp RPAREN body

    ID              shift and go to state 78


state 50

    (67) call -> ID LPAREN . params RPAREN
    (68) call -> ID LPAREN . RPAREN
    (69) params -> . exp COMMA params
    (70) params -> . exp
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 80
    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    params                         shift and go to state 79
    exp                            shift and go to state 81
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 51

    (18) stm -> REPEAT body . WHILE LPAREN exp RPAREN PV

    WHILE           shift and go to state 82


state 52

    (19) stm -> BREAK PV .

    WHILE           reduce using rule 19 (stm -> BREAK PV .)
    RETURN          reduce using rule 19 (stm -> BREAK PV .)
    FOR             reduce using rule 19 (stm -> BREAK PV .)
    REPEAT          reduce using rule 19 (stm -> BREAK PV .)
    BREAK           reduce using rule 19 (stm -> BREAK PV .)
    NEXT            reduce using rule 19 (stm -> BREAK PV .)
    SWITCH          reduce using rule 19 (stm -> BREAK PV .)
    IF              reduce using rule 19 (stm -> BREAK PV .)
    NUMBER_INT      reduce using rule 19 (stm -> BREAK PV .)
    NUMBER_FLOAT    reduce using rule 19 (stm -> BREAK PV .)
    ID              reduce using rule 19 (stm -> BREAK PV .)
    TRUE            reduce using rule 19 (stm -> BREAK PV .)
    FALSE           reduce using rule 19 (stm -> BREAK PV .)
    RCHAV           reduce using rule 19 (stm -> BREAK PV .)
    ELSE            reduce using rule 19 (stm -> BREAK PV .)


state 53

    (20) stm -> NEXT PV .

    WHILE           reduce using rule 20 (stm -> NEXT PV .)
    RETURN          reduce using rule 20 (stm -> NEXT PV .)
    FOR             reduce using rule 20 (stm -> NEXT PV .)
    REPEAT          reduce using rule 20 (stm -> NEXT PV .)
    BREAK           reduce using rule 20 (stm -> NEXT PV .)
    NEXT            reduce using rule 20 (stm -> NEXT PV .)
    SWITCH          reduce using rule 20 (stm -> NEXT PV .)
    IF              reduce using rule 20 (stm -> NEXT PV .)
    NUMBER_INT      reduce using rule 20 (stm -> NEXT PV .)
    NUMBER_FLOAT    reduce using rule 20 (stm -> NEXT PV .)
    ID              reduce using rule 20 (stm -> NEXT PV .)
    TRUE            reduce using rule 20 (stm -> NEXT PV .)
    FALSE           reduce using rule 20 (stm -> NEXT PV .)
    RCHAV           reduce using rule 20 (stm -> NEXT PV .)
    ELSE            reduce using rule 20 (stm -> NEXT PV .)


state 54

    (21) stm -> SWITCH LPAREN . exp COMMA cases RPAREN
    (22) stm -> SWITCH LPAREN . exp COMMA casesnum RPAREN
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 83
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 55

    (27) stm -> IF LPAREN . exp RPAREN bodyORstm
    (28) stm -> IF LPAREN . exp RPAREN bodyORstm ELSE bodyORstm
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 84
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 56

    (31) exp1 -> exp1 SOMA . exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp2                           shift and go to state 85
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 57

    (33) exp1 -> exp1 SUBTRAIR . exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp2                           shift and go to state 86
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 58

    (34) exp2 -> exp2 VEZES . exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp3                           shift and go to state 87
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 59

    (36) exp2 -> exp2 DIVIDIR . exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp3                           shift and go to state 88
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 60

    (37) exp3 -> exp4 POT . exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp4                           shift and go to state 25
    exp3                           shift and go to state 89
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 61

    (39) exp4 -> exp4 MAIOR . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp5                           shift and go to state 90
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 62

    (41) exp5 -> exp5 MENOR . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp6                           shift and go to state 91
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 63

    (43) exp6 -> exp6 MAIORIGUAL . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp7                           shift and go to state 92
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 64

    (45) exp7 -> exp7 MENORIGUAL . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp8                           shift and go to state 93
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 65

    (47) exp8 -> exp8 DIFERENTE . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp9                           shift and go to state 94
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 66

    (49) exp9 -> exp9 ANDVETOR . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp10                          shift and go to state 95
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 67

    (51) exp10 -> exp10 AND . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp11                          shift and go to state 96
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 68

    (53) exp11 -> exp11 ORVETOR . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp12                          shift and go to state 97
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 69

    (55) exp12 -> exp12 OR . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp13                          shift and go to state 98
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 70

    (57) exp13 -> exp13 NOTLOGICO . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp14                          shift and go to state 99
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 71

    (59) exp14 -> exp14 XOR . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp15                          shift and go to state 100
    call                           shift and go to state 37

state 72

    (6) sigparams -> ID . ID
    (7) sigparams -> ID . ID COMMA sigparams

    ID              shift and go to state 101


state 73

    (4) signature -> ID ID LPAREN sigparams . RPAREN

    RPAREN          shift and go to state 102


state 74

    (5) signature -> ID ID LPAREN RPAREN .

    LCHAV           reduce using rule 5 (signature -> ID ID LPAREN RPAREN .)


state 75

    (29) exp -> exp IGUAL exp1 .
    (31) exp1 -> exp1 . SOMA exp2
    (33) exp1 -> exp1 . SUBTRAIR exp2

    PV              reduce using rule 29 (exp -> exp IGUAL exp1 .)
    IGUAL           reduce using rule 29 (exp -> exp IGUAL exp1 .)
    RPAREN          reduce using rule 29 (exp -> exp IGUAL exp1 .)
    COMMA           reduce using rule 29 (exp -> exp IGUAL exp1 .)
    IGUALAT         reduce using rule 29 (exp -> exp IGUAL exp1 .)
    SOMA            shift and go to state 56
    SUBTRAIR        shift and go to state 57


state 76

    (15) stm -> WHILE LPAREN exp . RPAREN body
    (29) exp -> exp . IGUAL exp1

    RPAREN          shift and go to state 103
    IGUAL           shift and go to state 46


state 77

    (16) stm -> RETURN exp PV .

    WHILE           reduce using rule 16 (stm -> RETURN exp PV .)
    RETURN          reduce using rule 16 (stm -> RETURN exp PV .)
    FOR             reduce using rule 16 (stm -> RETURN exp PV .)
    REPEAT          reduce using rule 16 (stm -> RETURN exp PV .)
    BREAK           reduce using rule 16 (stm -> RETURN exp PV .)
    NEXT            reduce using rule 16 (stm -> RETURN exp PV .)
    SWITCH          reduce using rule 16 (stm -> RETURN exp PV .)
    IF              reduce using rule 16 (stm -> RETURN exp PV .)
    NUMBER_INT      reduce using rule 16 (stm -> RETURN exp PV .)
    NUMBER_FLOAT    reduce using rule 16 (stm -> RETURN exp PV .)
    ID              reduce using rule 16 (stm -> RETURN exp PV .)
    TRUE            reduce using rule 16 (stm -> RETURN exp PV .)
    FALSE           reduce using rule 16 (stm -> RETURN exp PV .)
    RCHAV           reduce using rule 16 (stm -> RETURN exp PV .)
    ELSE            reduce using rule 16 (stm -> RETURN exp PV .)


state 78

    (17) stm -> FOR LPAREN ID . IN exp RPAREN body

    IN              shift and go to state 104


state 79

    (67) call -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 105


state 80

    (68) call -> ID LPAREN RPAREN .

    XOR             reduce using rule 68 (call -> ID LPAREN RPAREN .)
    NOTLOGICO       reduce using rule 68 (call -> ID LPAREN RPAREN .)
    OR              reduce using rule 68 (call -> ID LPAREN RPAREN .)
    ORVETOR         reduce using rule 68 (call -> ID LPAREN RPAREN .)
    AND             reduce using rule 68 (call -> ID LPAREN RPAREN .)
    ANDVETOR        reduce using rule 68 (call -> ID LPAREN RPAREN .)
    DIFERENTE       reduce using rule 68 (call -> ID LPAREN RPAREN .)
    MENORIGUAL      reduce using rule 68 (call -> ID LPAREN RPAREN .)
    MAIORIGUAL      reduce using rule 68 (call -> ID LPAREN RPAREN .)
    MENOR           reduce using rule 68 (call -> ID LPAREN RPAREN .)
    POT             reduce using rule 68 (call -> ID LPAREN RPAREN .)
    MAIOR           reduce using rule 68 (call -> ID LPAREN RPAREN .)
    VEZES           reduce using rule 68 (call -> ID LPAREN RPAREN .)
    DIVIDIR         reduce using rule 68 (call -> ID LPAREN RPAREN .)
    SOMA            reduce using rule 68 (call -> ID LPAREN RPAREN .)
    SUBTRAIR        reduce using rule 68 (call -> ID LPAREN RPAREN .)
    PV              reduce using rule 68 (call -> ID LPAREN RPAREN .)
    IGUAL           reduce using rule 68 (call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 68 (call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 68 (call -> ID LPAREN RPAREN .)
    IGUALAT         reduce using rule 68 (call -> ID LPAREN RPAREN .)


state 81

    (69) params -> exp . COMMA params
    (70) params -> exp .
    (29) exp -> exp . IGUAL exp1

    COMMA           shift and go to state 106
    RPAREN          reduce using rule 70 (params -> exp .)
    IGUAL           shift and go to state 46


state 82

    (18) stm -> REPEAT body WHILE . LPAREN exp RPAREN PV

    LPAREN          shift and go to state 107


state 83

    (21) stm -> SWITCH LPAREN exp . COMMA cases RPAREN
    (22) stm -> SWITCH LPAREN exp . COMMA casesnum RPAREN
    (29) exp -> exp . IGUAL exp1

    COMMA           shift and go to state 108
    IGUAL           shift and go to state 46


state 84

    (27) stm -> IF LPAREN exp . RPAREN bodyORstm
    (28) stm -> IF LPAREN exp . RPAREN bodyORstm ELSE bodyORstm
    (29) exp -> exp . IGUAL exp1

    RPAREN          shift and go to state 109
    IGUAL           shift and go to state 46


state 85

    (31) exp1 -> exp1 SOMA exp2 .
    (34) exp2 -> exp2 . VEZES exp3
    (36) exp2 -> exp2 . DIVIDIR exp3

    SOMA            reduce using rule 31 (exp1 -> exp1 SOMA exp2 .)
    SUBTRAIR        reduce using rule 31 (exp1 -> exp1 SOMA exp2 .)
    PV              reduce using rule 31 (exp1 -> exp1 SOMA exp2 .)
    IGUAL           reduce using rule 31 (exp1 -> exp1 SOMA exp2 .)
    RPAREN          reduce using rule 31 (exp1 -> exp1 SOMA exp2 .)
    COMMA           reduce using rule 31 (exp1 -> exp1 SOMA exp2 .)
    IGUALAT         reduce using rule 31 (exp1 -> exp1 SOMA exp2 .)
    VEZES           shift and go to state 58
    DIVIDIR         shift and go to state 59


state 86

    (33) exp1 -> exp1 SUBTRAIR exp2 .
    (34) exp2 -> exp2 . VEZES exp3
    (36) exp2 -> exp2 . DIVIDIR exp3

    SOMA            reduce using rule 33 (exp1 -> exp1 SUBTRAIR exp2 .)
    SUBTRAIR        reduce using rule 33 (exp1 -> exp1 SUBTRAIR exp2 .)
    PV              reduce using rule 33 (exp1 -> exp1 SUBTRAIR exp2 .)
    IGUAL           reduce using rule 33 (exp1 -> exp1 SUBTRAIR exp2 .)
    RPAREN          reduce using rule 33 (exp1 -> exp1 SUBTRAIR exp2 .)
    COMMA           reduce using rule 33 (exp1 -> exp1 SUBTRAIR exp2 .)
    IGUALAT         reduce using rule 33 (exp1 -> exp1 SUBTRAIR exp2 .)
    VEZES           shift and go to state 58
    DIVIDIR         shift and go to state 59


state 87

    (34) exp2 -> exp2 VEZES exp3 .

    VEZES           reduce using rule 34 (exp2 -> exp2 VEZES exp3 .)
    DIVIDIR         reduce using rule 34 (exp2 -> exp2 VEZES exp3 .)
    SOMA            reduce using rule 34 (exp2 -> exp2 VEZES exp3 .)
    SUBTRAIR        reduce using rule 34 (exp2 -> exp2 VEZES exp3 .)
    PV              reduce using rule 34 (exp2 -> exp2 VEZES exp3 .)
    IGUAL           reduce using rule 34 (exp2 -> exp2 VEZES exp3 .)
    RPAREN          reduce using rule 34 (exp2 -> exp2 VEZES exp3 .)
    COMMA           reduce using rule 34 (exp2 -> exp2 VEZES exp3 .)
    IGUALAT         reduce using rule 34 (exp2 -> exp2 VEZES exp3 .)


state 88

    (36) exp2 -> exp2 DIVIDIR exp3 .

    VEZES           reduce using rule 36 (exp2 -> exp2 DIVIDIR exp3 .)
    DIVIDIR         reduce using rule 36 (exp2 -> exp2 DIVIDIR exp3 .)
    SOMA            reduce using rule 36 (exp2 -> exp2 DIVIDIR exp3 .)
    SUBTRAIR        reduce using rule 36 (exp2 -> exp2 DIVIDIR exp3 .)
    PV              reduce using rule 36 (exp2 -> exp2 DIVIDIR exp3 .)
    IGUAL           reduce using rule 36 (exp2 -> exp2 DIVIDIR exp3 .)
    RPAREN          reduce using rule 36 (exp2 -> exp2 DIVIDIR exp3 .)
    COMMA           reduce using rule 36 (exp2 -> exp2 DIVIDIR exp3 .)
    IGUALAT         reduce using rule 36 (exp2 -> exp2 DIVIDIR exp3 .)


state 89

    (37) exp3 -> exp4 POT exp3 .

    VEZES           reduce using rule 37 (exp3 -> exp4 POT exp3 .)
    DIVIDIR         reduce using rule 37 (exp3 -> exp4 POT exp3 .)
    SOMA            reduce using rule 37 (exp3 -> exp4 POT exp3 .)
    SUBTRAIR        reduce using rule 37 (exp3 -> exp4 POT exp3 .)
    PV              reduce using rule 37 (exp3 -> exp4 POT exp3 .)
    IGUAL           reduce using rule 37 (exp3 -> exp4 POT exp3 .)
    RPAREN          reduce using rule 37 (exp3 -> exp4 POT exp3 .)
    COMMA           reduce using rule 37 (exp3 -> exp4 POT exp3 .)
    IGUALAT         reduce using rule 37 (exp3 -> exp4 POT exp3 .)


state 90

    (39) exp4 -> exp4 MAIOR exp5 .
    (41) exp5 -> exp5 . MENOR exp6

    POT             reduce using rule 39 (exp4 -> exp4 MAIOR exp5 .)
    MAIOR           reduce using rule 39 (exp4 -> exp4 MAIOR exp5 .)
    VEZES           reduce using rule 39 (exp4 -> exp4 MAIOR exp5 .)
    DIVIDIR         reduce using rule 39 (exp4 -> exp4 MAIOR exp5 .)
    SOMA            reduce using rule 39 (exp4 -> exp4 MAIOR exp5 .)
    SUBTRAIR        reduce using rule 39 (exp4 -> exp4 MAIOR exp5 .)
    PV              reduce using rule 39 (exp4 -> exp4 MAIOR exp5 .)
    IGUAL           reduce using rule 39 (exp4 -> exp4 MAIOR exp5 .)
    RPAREN          reduce using rule 39 (exp4 -> exp4 MAIOR exp5 .)
    COMMA           reduce using rule 39 (exp4 -> exp4 MAIOR exp5 .)
    IGUALAT         reduce using rule 39 (exp4 -> exp4 MAIOR exp5 .)
    MENOR           shift and go to state 62


state 91

    (41) exp5 -> exp5 MENOR exp6 .
    (43) exp6 -> exp6 . MAIORIGUAL exp7

    MENOR           reduce using rule 41 (exp5 -> exp5 MENOR exp6 .)
    POT             reduce using rule 41 (exp5 -> exp5 MENOR exp6 .)
    MAIOR           reduce using rule 41 (exp5 -> exp5 MENOR exp6 .)
    VEZES           reduce using rule 41 (exp5 -> exp5 MENOR exp6 .)
    DIVIDIR         reduce using rule 41 (exp5 -> exp5 MENOR exp6 .)
    SOMA            reduce using rule 41 (exp5 -> exp5 MENOR exp6 .)
    SUBTRAIR        reduce using rule 41 (exp5 -> exp5 MENOR exp6 .)
    PV              reduce using rule 41 (exp5 -> exp5 MENOR exp6 .)
    IGUAL           reduce using rule 41 (exp5 -> exp5 MENOR exp6 .)
    RPAREN          reduce using rule 41 (exp5 -> exp5 MENOR exp6 .)
    COMMA           reduce using rule 41 (exp5 -> exp5 MENOR exp6 .)
    IGUALAT         reduce using rule 41 (exp5 -> exp5 MENOR exp6 .)
    MAIORIGUAL      shift and go to state 63


state 92

    (43) exp6 -> exp6 MAIORIGUAL exp7 .
    (45) exp7 -> exp7 . MENORIGUAL exp8

    MAIORIGUAL      reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    MENOR           reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    POT             reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    MAIOR           reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    VEZES           reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    DIVIDIR         reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    SOMA            reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    SUBTRAIR        reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    PV              reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    IGUAL           reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    RPAREN          reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    COMMA           reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    IGUALAT         reduce using rule 43 (exp6 -> exp6 MAIORIGUAL exp7 .)
    MENORIGUAL      shift and go to state 64


state 93

    (45) exp7 -> exp7 MENORIGUAL exp8 .
    (47) exp8 -> exp8 . DIFERENTE exp9

    MENORIGUAL      reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    MAIORIGUAL      reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    MENOR           reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    POT             reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    MAIOR           reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    VEZES           reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    DIVIDIR         reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    SOMA            reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    SUBTRAIR        reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    PV              reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    IGUAL           reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    RPAREN          reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    COMMA           reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    IGUALAT         reduce using rule 45 (exp7 -> exp7 MENORIGUAL exp8 .)
    DIFERENTE       shift and go to state 65


state 94

    (47) exp8 -> exp8 DIFERENTE exp9 .
    (49) exp9 -> exp9 . ANDVETOR exp10

    DIFERENTE       reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    MENORIGUAL      reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    MAIORIGUAL      reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    MENOR           reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    POT             reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    MAIOR           reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    VEZES           reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    DIVIDIR         reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    SOMA            reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    SUBTRAIR        reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    PV              reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    IGUAL           reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    RPAREN          reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    COMMA           reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    IGUALAT         reduce using rule 47 (exp8 -> exp8 DIFERENTE exp9 .)
    ANDVETOR        shift and go to state 66


state 95

    (49) exp9 -> exp9 ANDVETOR exp10 .
    (51) exp10 -> exp10 . AND exp11

    ANDVETOR        reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    DIFERENTE       reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    MENORIGUAL      reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    MAIORIGUAL      reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    MENOR           reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    POT             reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    MAIOR           reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    VEZES           reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    DIVIDIR         reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    SOMA            reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    SUBTRAIR        reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    PV              reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    IGUAL           reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    RPAREN          reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    COMMA           reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    IGUALAT         reduce using rule 49 (exp9 -> exp9 ANDVETOR exp10 .)
    AND             shift and go to state 67


state 96

    (51) exp10 -> exp10 AND exp11 .
    (53) exp11 -> exp11 . ORVETOR exp12

    AND             reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    ANDVETOR        reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    DIFERENTE       reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    MENORIGUAL      reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    MAIORIGUAL      reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    MENOR           reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    POT             reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    MAIOR           reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    VEZES           reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    DIVIDIR         reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    SOMA            reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    SUBTRAIR        reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    PV              reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    IGUAL           reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    RPAREN          reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    COMMA           reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    IGUALAT         reduce using rule 51 (exp10 -> exp10 AND exp11 .)
    ORVETOR         shift and go to state 68


state 97

    (53) exp11 -> exp11 ORVETOR exp12 .
    (55) exp12 -> exp12 . OR exp13

    ORVETOR         reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    AND             reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    ANDVETOR        reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    DIFERENTE       reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    MENORIGUAL      reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    MAIORIGUAL      reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    MENOR           reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    POT             reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    MAIOR           reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    VEZES           reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    DIVIDIR         reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    SOMA            reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    SUBTRAIR        reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    PV              reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    IGUAL           reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    RPAREN          reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    COMMA           reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    IGUALAT         reduce using rule 53 (exp11 -> exp11 ORVETOR exp12 .)
    OR              shift and go to state 69


state 98

    (55) exp12 -> exp12 OR exp13 .
    (57) exp13 -> exp13 . NOTLOGICO exp14

    OR              reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    ORVETOR         reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    AND             reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    ANDVETOR        reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    DIFERENTE       reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    MENORIGUAL      reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    MAIORIGUAL      reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    MENOR           reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    POT             reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    MAIOR           reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    VEZES           reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    DIVIDIR         reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    SOMA            reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    SUBTRAIR        reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    PV              reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    IGUAL           reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    RPAREN          reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    COMMA           reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    IGUALAT         reduce using rule 55 (exp12 -> exp12 OR exp13 .)
    NOTLOGICO       shift and go to state 70


state 99

    (57) exp13 -> exp13 NOTLOGICO exp14 .
    (59) exp14 -> exp14 . XOR exp15

    NOTLOGICO       reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    OR              reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    ORVETOR         reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    AND             reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    ANDVETOR        reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    DIFERENTE       reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    MENORIGUAL      reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    MAIORIGUAL      reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    MENOR           reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    POT             reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    MAIOR           reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    VEZES           reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    DIVIDIR         reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    SOMA            reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    SUBTRAIR        reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    PV              reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    IGUAL           reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    RPAREN          reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    COMMA           reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    IGUALAT         reduce using rule 57 (exp13 -> exp13 NOTLOGICO exp14 .)
    XOR             shift and go to state 71


state 100

    (59) exp14 -> exp14 XOR exp15 .

    XOR             reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    NOTLOGICO       reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    OR              reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    ORVETOR         reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    AND             reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    ANDVETOR        reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    DIFERENTE       reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    MENORIGUAL      reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    MAIORIGUAL      reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    MENOR           reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    POT             reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    MAIOR           reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    VEZES           reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    DIVIDIR         reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    SOMA            reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    SUBTRAIR        reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    PV              reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    IGUAL           reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    RPAREN          reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    COMMA           reduce using rule 59 (exp14 -> exp14 XOR exp15 .)
    IGUALAT         reduce using rule 59 (exp14 -> exp14 XOR exp15 .)


state 101

    (6) sigparams -> ID ID .
    (7) sigparams -> ID ID . COMMA sigparams

    RPAREN          reduce using rule 6 (sigparams -> ID ID .)
    COMMA           shift and go to state 110


state 102

    (4) signature -> ID ID LPAREN sigparams RPAREN .

    LCHAV           reduce using rule 4 (signature -> ID ID LPAREN sigparams RPAREN .)


state 103

    (15) stm -> WHILE LPAREN exp RPAREN . body
    (8) body -> . LCHAV stms RCHAV
    (9) body -> . LCHAV RCHAV

    LCHAV           shift and go to state 7

    body                           shift and go to state 111

state 104

    (17) stm -> FOR LPAREN ID IN . exp RPAREN body
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 112
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 105

    (67) call -> ID LPAREN params RPAREN .

    XOR             reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    NOTLOGICO       reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    OR              reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    ORVETOR         reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    AND             reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    ANDVETOR        reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    DIFERENTE       reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    MENORIGUAL      reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    MAIORIGUAL      reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    MENOR           reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    POT             reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    MAIOR           reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    VEZES           reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    DIVIDIR         reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    SOMA            reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    SUBTRAIR        reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    PV              reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    IGUAL           reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    COMMA           reduce using rule 67 (call -> ID LPAREN params RPAREN .)
    IGUALAT         reduce using rule 67 (call -> ID LPAREN params RPAREN .)


state 106

    (69) params -> exp COMMA . params
    (69) params -> . exp COMMA params
    (70) params -> . exp
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 81
    params                         shift and go to state 113
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 107

    (18) stm -> REPEAT body WHILE LPAREN . exp RPAREN PV
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 114
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 108

    (21) stm -> SWITCH LPAREN exp COMMA . cases RPAREN
    (22) stm -> SWITCH LPAREN exp COMMA . casesnum RPAREN
    (23) cases -> . exp IGUALAT exp
    (24) cases -> . exp IGUALAT exp COMMA cases
    (25) casesnum -> . exp
    (26) casesnum -> . exp COMMA cases
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 115
    cases                          shift and go to state 116
    casesnum                       shift and go to state 117
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 109

    (27) stm -> IF LPAREN exp RPAREN . bodyORstm
    (28) stm -> IF LPAREN exp RPAREN . bodyORstm ELSE bodyORstm
    (12) bodyORstm -> . body
    (13) bodyORstm -> . stm
    (8) body -> . LCHAV stms RCHAV
    (9) body -> . LCHAV RCHAV
    (14) stm -> . exp PV
    (15) stm -> . WHILE LPAREN exp RPAREN body
    (16) stm -> . RETURN exp PV
    (17) stm -> . FOR LPAREN ID IN exp RPAREN body
    (18) stm -> . REPEAT body WHILE LPAREN exp RPAREN PV
    (19) stm -> . BREAK PV
    (20) stm -> . NEXT PV
    (21) stm -> . SWITCH LPAREN exp COMMA cases RPAREN
    (22) stm -> . SWITCH LPAREN exp COMMA casesnum RPAREN
    (27) stm -> . IF LPAREN exp RPAREN bodyORstm
    (28) stm -> . IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    LCHAV           shift and go to state 7
    WHILE           shift and go to state 13
    RETURN          shift and go to state 14
    FOR             shift and go to state 15
    REPEAT          shift and go to state 17
    BREAK           shift and go to state 18
    NEXT            shift and go to state 19
    SWITCH          shift and go to state 20
    IF              shift and go to state 21
    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 12
    bodyORstm                      shift and go to state 118
    body                           shift and go to state 119
    stm                            shift and go to state 120
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 110

    (7) sigparams -> ID ID COMMA . sigparams
    (6) sigparams -> . ID ID
    (7) sigparams -> . ID ID COMMA sigparams

    ID              shift and go to state 72

    sigparams                      shift and go to state 121

state 111

    (15) stm -> WHILE LPAREN exp RPAREN body .

    WHILE           reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    RETURN          reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    FOR             reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    REPEAT          reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    BREAK           reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    NEXT            reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    SWITCH          reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    IF              reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    NUMBER_INT      reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    NUMBER_FLOAT    reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    ID              reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    TRUE            reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    FALSE           reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    RCHAV           reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)
    ELSE            reduce using rule 15 (stm -> WHILE LPAREN exp RPAREN body .)


state 112

    (17) stm -> FOR LPAREN ID IN exp . RPAREN body
    (29) exp -> exp . IGUAL exp1

    RPAREN          shift and go to state 122
    IGUAL           shift and go to state 46


state 113

    (69) params -> exp COMMA params .

    RPAREN          reduce using rule 69 (params -> exp COMMA params .)


state 114

    (18) stm -> REPEAT body WHILE LPAREN exp . RPAREN PV
    (29) exp -> exp . IGUAL exp1

    RPAREN          shift and go to state 123
    IGUAL           shift and go to state 46


state 115

    (23) cases -> exp . IGUALAT exp
    (24) cases -> exp . IGUALAT exp COMMA cases
    (25) casesnum -> exp .
    (26) casesnum -> exp . COMMA cases
    (29) exp -> exp . IGUAL exp1

    IGUALAT         shift and go to state 124
    RPAREN          reduce using rule 25 (casesnum -> exp .)
    COMMA           shift and go to state 125
    IGUAL           shift and go to state 46


state 116

    (21) stm -> SWITCH LPAREN exp COMMA cases . RPAREN

    RPAREN          shift and go to state 126


state 117

    (22) stm -> SWITCH LPAREN exp COMMA casesnum . RPAREN

    RPAREN          shift and go to state 127


state 118

    (27) stm -> IF LPAREN exp RPAREN bodyORstm .
    (28) stm -> IF LPAREN exp RPAREN bodyORstm . ELSE bodyORstm

  ! shift/reduce conflict for ELSE resolved as shift
    WHILE           reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    RETURN          reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    FOR             reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    REPEAT          reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    BREAK           reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    NEXT            reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    SWITCH          reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    IF              reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    NUMBER_INT      reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    NUMBER_FLOAT    reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    ID              reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    TRUE            reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    FALSE           reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    RCHAV           reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .)
    ELSE            shift and go to state 128

  ! ELSE            [ reduce using rule 27 (stm -> IF LPAREN exp RPAREN bodyORstm .) ]


state 119

    (12) bodyORstm -> body .

    ELSE            reduce using rule 12 (bodyORstm -> body .)
    WHILE           reduce using rule 12 (bodyORstm -> body .)
    RETURN          reduce using rule 12 (bodyORstm -> body .)
    FOR             reduce using rule 12 (bodyORstm -> body .)
    REPEAT          reduce using rule 12 (bodyORstm -> body .)
    BREAK           reduce using rule 12 (bodyORstm -> body .)
    NEXT            reduce using rule 12 (bodyORstm -> body .)
    SWITCH          reduce using rule 12 (bodyORstm -> body .)
    IF              reduce using rule 12 (bodyORstm -> body .)
    NUMBER_INT      reduce using rule 12 (bodyORstm -> body .)
    NUMBER_FLOAT    reduce using rule 12 (bodyORstm -> body .)
    ID              reduce using rule 12 (bodyORstm -> body .)
    TRUE            reduce using rule 12 (bodyORstm -> body .)
    FALSE           reduce using rule 12 (bodyORstm -> body .)
    RCHAV           reduce using rule 12 (bodyORstm -> body .)


state 120

    (13) bodyORstm -> stm .

    ELSE            reduce using rule 13 (bodyORstm -> stm .)
    WHILE           reduce using rule 13 (bodyORstm -> stm .)
    RETURN          reduce using rule 13 (bodyORstm -> stm .)
    FOR             reduce using rule 13 (bodyORstm -> stm .)
    REPEAT          reduce using rule 13 (bodyORstm -> stm .)
    BREAK           reduce using rule 13 (bodyORstm -> stm .)
    NEXT            reduce using rule 13 (bodyORstm -> stm .)
    SWITCH          reduce using rule 13 (bodyORstm -> stm .)
    IF              reduce using rule 13 (bodyORstm -> stm .)
    NUMBER_INT      reduce using rule 13 (bodyORstm -> stm .)
    NUMBER_FLOAT    reduce using rule 13 (bodyORstm -> stm .)
    ID              reduce using rule 13 (bodyORstm -> stm .)
    TRUE            reduce using rule 13 (bodyORstm -> stm .)
    FALSE           reduce using rule 13 (bodyORstm -> stm .)
    RCHAV           reduce using rule 13 (bodyORstm -> stm .)


state 121

    (7) sigparams -> ID ID COMMA sigparams .

    RPAREN          reduce using rule 7 (sigparams -> ID ID COMMA sigparams .)


state 122

    (17) stm -> FOR LPAREN ID IN exp RPAREN . body
    (8) body -> . LCHAV stms RCHAV
    (9) body -> . LCHAV RCHAV

    LCHAV           shift and go to state 7

    body                           shift and go to state 129

state 123

    (18) stm -> REPEAT body WHILE LPAREN exp RPAREN . PV

    PV              shift and go to state 130


state 124

    (23) cases -> exp IGUALAT . exp
    (24) cases -> exp IGUALAT . exp COMMA cases
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 131
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 125

    (26) casesnum -> exp COMMA . cases
    (23) cases -> . exp IGUALAT exp
    (24) cases -> . exp IGUALAT exp COMMA cases
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 132
    cases                          shift and go to state 133
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 126

    (21) stm -> SWITCH LPAREN exp COMMA cases RPAREN .

    WHILE           reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    RETURN          reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    FOR             reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    REPEAT          reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    BREAK           reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    NEXT            reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    SWITCH          reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    IF              reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    NUMBER_INT      reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    NUMBER_FLOAT    reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    ID              reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    TRUE            reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    FALSE           reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    RCHAV           reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)
    ELSE            reduce using rule 21 (stm -> SWITCH LPAREN exp COMMA cases RPAREN .)


state 127

    (22) stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .

    WHILE           reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    RETURN          reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    FOR             reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    REPEAT          reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    BREAK           reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    NEXT            reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    SWITCH          reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    IF              reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    NUMBER_INT      reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    NUMBER_FLOAT    reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    ID              reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    TRUE            reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    FALSE           reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    RCHAV           reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)
    ELSE            reduce using rule 22 (stm -> SWITCH LPAREN exp COMMA casesnum RPAREN .)


state 128

    (28) stm -> IF LPAREN exp RPAREN bodyORstm ELSE . bodyORstm
    (12) bodyORstm -> . body
    (13) bodyORstm -> . stm
    (8) body -> . LCHAV stms RCHAV
    (9) body -> . LCHAV RCHAV
    (14) stm -> . exp PV
    (15) stm -> . WHILE LPAREN exp RPAREN body
    (16) stm -> . RETURN exp PV
    (17) stm -> . FOR LPAREN ID IN exp RPAREN body
    (18) stm -> . REPEAT body WHILE LPAREN exp RPAREN PV
    (19) stm -> . BREAK PV
    (20) stm -> . NEXT PV
    (21) stm -> . SWITCH LPAREN exp COMMA cases RPAREN
    (22) stm -> . SWITCH LPAREN exp COMMA casesnum RPAREN
    (27) stm -> . IF LPAREN exp RPAREN bodyORstm
    (28) stm -> . IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    LCHAV           shift and go to state 7
    WHILE           shift and go to state 13
    RETURN          shift and go to state 14
    FOR             shift and go to state 15
    REPEAT          shift and go to state 17
    BREAK           shift and go to state 18
    NEXT            shift and go to state 19
    SWITCH          shift and go to state 20
    IF              shift and go to state 21
    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 12
    bodyORstm                      shift and go to state 134
    body                           shift and go to state 119
    stm                            shift and go to state 120
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 129

    (17) stm -> FOR LPAREN ID IN exp RPAREN body .

    WHILE           reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    RETURN          reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    FOR             reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    REPEAT          reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    BREAK           reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    NEXT            reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    SWITCH          reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    IF              reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    NUMBER_INT      reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    NUMBER_FLOAT    reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    ID              reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    TRUE            reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    FALSE           reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    RCHAV           reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)
    ELSE            reduce using rule 17 (stm -> FOR LPAREN ID IN exp RPAREN body .)


state 130

    (18) stm -> REPEAT body WHILE LPAREN exp RPAREN PV .

    WHILE           reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    RETURN          reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    FOR             reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    REPEAT          reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    BREAK           reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    NEXT            reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    SWITCH          reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    IF              reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    NUMBER_INT      reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    NUMBER_FLOAT    reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    ID              reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    TRUE            reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    FALSE           reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    RCHAV           reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)
    ELSE            reduce using rule 18 (stm -> REPEAT body WHILE LPAREN exp RPAREN PV .)


state 131

    (23) cases -> exp IGUALAT exp .
    (24) cases -> exp IGUALAT exp . COMMA cases
    (29) exp -> exp . IGUAL exp1

    RPAREN          reduce using rule 23 (cases -> exp IGUALAT exp .)
    COMMA           shift and go to state 135
    IGUAL           shift and go to state 46


state 132

    (23) cases -> exp . IGUALAT exp
    (24) cases -> exp . IGUALAT exp COMMA cases
    (29) exp -> exp . IGUAL exp1

    IGUALAT         shift and go to state 124
    IGUAL           shift and go to state 46


state 133

    (26) casesnum -> exp COMMA cases .

    RPAREN          reduce using rule 26 (casesnum -> exp COMMA cases .)


state 134

    (28) stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .

    WHILE           reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    RETURN          reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    FOR             reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    REPEAT          reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    BREAK           reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    NEXT            reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    SWITCH          reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    IF              reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    NUMBER_INT      reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    NUMBER_FLOAT    reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    ID              reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    TRUE            reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    FALSE           reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    RCHAV           reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)
    ELSE            reduce using rule 28 (stm -> IF LPAREN exp RPAREN bodyORstm ELSE bodyORstm .)


state 135

    (24) cases -> exp IGUALAT exp COMMA . cases
    (23) cases -> . exp IGUALAT exp
    (24) cases -> . exp IGUALAT exp COMMA cases
    (29) exp -> . exp IGUAL exp1
    (30) exp -> . exp1
    (31) exp1 -> . exp1 SOMA exp2
    (32) exp1 -> . exp2
    (33) exp1 -> . exp1 SUBTRAIR exp2
    (34) exp2 -> . exp2 VEZES exp3
    (35) exp2 -> . exp3
    (36) exp2 -> . exp2 DIVIDIR exp3
    (37) exp3 -> . exp4 POT exp3
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 MAIOR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 MENOR exp6
    (42) exp5 -> . exp6
    (43) exp6 -> . exp6 MAIORIGUAL exp7
    (44) exp6 -> . exp7
    (45) exp7 -> . exp7 MENORIGUAL exp8
    (46) exp7 -> . exp8
    (47) exp8 -> . exp8 DIFERENTE exp9
    (48) exp8 -> . exp9
    (49) exp9 -> . exp9 ANDVETOR exp10
    (50) exp9 -> . exp10
    (51) exp10 -> . exp10 AND exp11
    (52) exp10 -> . exp11
    (53) exp11 -> . exp11 ORVETOR exp12
    (54) exp11 -> . exp12
    (55) exp12 -> . exp12 OR exp13
    (56) exp12 -> . exp13
    (57) exp13 -> . exp13 NOTLOGICO exp14
    (58) exp13 -> . exp14
    (59) exp14 -> . exp14 XOR exp15
    (60) exp14 -> . exp15
    (61) exp15 -> . call
    (62) exp15 -> . NUMBER_INT
    (63) exp15 -> . NUMBER_FLOAT
    (64) exp15 -> . ID
    (65) exp15 -> . TRUE
    (66) exp15 -> . FALSE
    (67) call -> . ID LPAREN params RPAREN
    (68) call -> . ID LPAREN RPAREN

    NUMBER_INT      shift and go to state 38
    NUMBER_FLOAT    shift and go to state 39
    ID              shift and go to state 16
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    exp                            shift and go to state 132
    cases                          shift and go to state 136
    exp1                           shift and go to state 22
    exp2                           shift and go to state 23
    exp3                           shift and go to state 24
    exp4                           shift and go to state 25
    exp5                           shift and go to state 26
    exp6                           shift and go to state 27
    exp7                           shift and go to state 28
    exp8                           shift and go to state 29
    exp9                           shift and go to state 30
    exp10                          shift and go to state 31
    exp11                          shift and go to state 32
    exp12                          shift and go to state 33
    exp13                          shift and go to state 34
    exp14                          shift and go to state 35
    exp15                          shift and go to state 36
    call                           shift and go to state 37

state 136

    (24) cases -> exp IGUALAT exp COMMA cases .

    RPAREN          reduce using rule 24 (cases -> exp IGUALAT exp COMMA cases .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 118 resolved as shift
